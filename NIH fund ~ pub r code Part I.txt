########################################################################
# Read in grant, publication, and link data from NIH for FYs 2012-2016
###########################################################################

#########################################################################
# Function definition
# Unzip and read csv file from a URL 
#
# Input: path_prefix = char string of beginning of URL 
#         year  = number or string that identifies a file in series
#         ext = file extension of zipped file 
#########################################################################
tf <- tempfile(tmpdir = tdir <- tempdir())

unzip_online_csv <- function(path_prefix,year,ext)
{
    out = list()
    url<- paste0(path_prefix,year,ext)
    download.file(url,tf)
    out <-read.csv(unzip(tf, exdir=tdir))
    return(out)   
}
start=12
end=17
nih = list()
nihlink=list()
nihpub=list()
for(i in start:end)
{ 
  # Link file
  nihlink[[i]] <- unzip_online_csv(path_prefix="https://exporter.nih.gov/CSVs/final/RePORTER_PUBLNK_C_20", year=i,ext=".zip") 

  # Project details
  nih[[i]]<-unzip_online_csv(path_prefix="https://exporter.nih.gov/CSVs/final/RePORTER_PRJ_C_FY20", year=i,ext=".zip") 

  # Publications
  nihpub[[i]]<-unzip_online_csv(path_prefix="https://exporter.nih.gov/CSVs/final/RePORTER_PUB_C_20", year=i,ext=".zip") 
}

nihpat<-unzip_online_csv(path_prefix="https://exporter.nih.gov/CSVs/final/RePORTER_PATENTS_C_", year="ALL",ext=".zip") 


# scrape journal impact factors

library(XML)
table<-list()
classes<-c(rep("character",3),rep("numeric",4))
url<-"http://www.citefactor.org/journal-impact-factor-list-2015.html"
table[[1]]<-readHTMLTable(url, header=T, which=2,stringsAsFactors=F)
impacttable<-table[[1]]
colnames<-c("Index","Journal Name","ISSN","2014/2015","2013","2012", "2011") 
colnames(impacttable)<-colnames
for (i in 2:18)
{
  url<-paste0("http://www.citefactor.org/journal-impact-factor-list-2015_",i,".html")
  table[[i]]<-readHTMLTable(url, header=T, colClasses=classes,which=2,stringsAsFactors=F)
  colnames(table[[i]])<-colnames 
  impacttable<-rbind(impacttable,table[[i]])
}

#############################################################################
# descriptive and exploratory analysis draft
# a quick view of cost per publication by type over 5 years
#############################################################################
varnames=c("ACTIVITY","CORE_PROJECT_NUM", "FUNDING_MECHANISM","PROJECT_TERMS","TOTAL_COST","TOTAL_COST_SUB_PROJECT")
fund12to16<-rbind(nih[[12]][,varnames],
	   	  nih[[13]][,varnames],
		  nih[[14]][,varnames],
		  nih[[15]][,varnames],
		  nih[[16]][,varnames])
#replace na in cost columns with 0, and sum total cost
fund12to16$TOTAL_COST[is.na(fund12to16$TOTAL_COST)]<-0
fund12to16$TOTAL_COST_SUB_PROJECT[is.na(fund12to16$TOTAL_COST_SUB_PROJECT)]<-0
fund12to16$cost<-fund12to16$TOTAL_COST+fund12to16$TOTAL_COST_SUB_PROJECT
varnames2=c("ACTIVITY","CORE_PROJECT_NUM","PROJECT_TERMS","FUNDING_MECHANISM","cost")
fund12to16<-fund12to16[,varnames2]

# combine 5 years of cost
aggr<-aggregate(fund12to16$cost, list(fund12to16$CORE_PROJECT_NUM),sum)
colnames(aggr)<- c("CORE_PROJECT_NUM","cost")

#create analysis file with type, project number and total cost
varnames3=c("ACTIVITY","CORE_PROJECT_NUM","PROJECT_TERMS","FUNDING_MECHANISM")
fund12to16st<-merge(fund12to16[,varnames3],aggr,by="CORE_PROJECT_NUM",all.y=TRUE)
#eliminate duplicate rows
fund12to16st<-fund12to16st[!duplicated(fund12to16st$CORE_PROJECT_NUM),]
# eliminate 0  and other place holder in cost rows
fund12to16st<-fund12to16st[!(fund12to16st$cost<1000),]

#combine data from 5 years of publications
nihlink13to17<- rbind(nihlink[[13]], nihlink[[14]], nihlink[[15]], nihlink[[16]],nihlink[[17]])
colnames(nihlink13to17)<-c("PMID", "CORE_PROJECT_NUM")
pubnum<-as.data.frame(table(nihlink13to17$CORE_PROJECT_NUM))
colnames(pubnum)<-c("CORE_PROJECT_NUM","pubnum")

# merge cost with publication numbers
fundpub5yr<-merge(fund12to16st, pubnum, by="CORE_PROJECT_NUM")
# grant by type and cost per publication, barplot
r01<-fundpub5yr[fundpub5yr$ACTIVITY=="R01",]
r21<-fundpub5yr[fundpub5yr$ACTIVITY=="R21",]
k99<-fundpub5yr[fundpub5yr$ACTIVITY=="K99",]
type<- c("R01","R21","K99")
costperpub<- c(sum(r01$cost)/sum(r01$pubnum),
sum(r21$cost)/sum(r21$pubnum),
sum(k99$cost)/sum(k99$pubnum))
costperpub<-round(costperpub)
table1<-data.frame(type,costperpub)
costbar<- barplot(table1$costperpub,names.arg= c("lg grant","med grant","sm grant"),
main="Cost per Publication 2012-16",ylab="dollars")
text(x = costbar, label=costperpub, pos=3, cex = 0.55, col = "red")

##############################################################
# examine 3 largest research fields
##############################################################

library(ggpubr)
cancer<-fundpub5yr[grepl("cancer", fundpub5yr$PROJECT_TERMS),]
heart<-fundpub5yr[grepl(c("heart|vascular"), fundpub5yr$PROJECT_TERMS),]
diab<-fundpub5yr[grepl("diabetes|diabetic", fundpub5yr$PROJECT_TERMS),]
# discount center grants
cancer<-cancer[!cancer$ACTIVITY=="P30",]
heart<-heart[!heart$ACTIVITY=="P30",]
diab<-diab[!diab$ACTIVITY=="P30",]

cancer$type<-"cancer"
heart$type<-"heart"
diab$type<-"diab"
field<-rbind(cancer,heart,diab)
field$perpub<-field$cost/field$pubnum
fit<-aov(perpub~type, data=field)
summary(fit)
TukeyHSD(fit)
ggline(field, x = "type", y = "perpub", add=c("mean_sd","jitters"),color="type",
      order = c("cancer", "heart", "diab"),xlab = "Research field", ylab = "Dollars per Publication")

####################################################################################################
# A deeper dive into the finer details of the grant files
####################################################################################################


#############################################################
# Combine all years of grant data 2012-2016
#############################################################

nih_fund_time_series <- list()
var_by_FY = data.frame()

############################################
# Enter Keep list of variables
############################################


var_names <- c('ACTIVITY', 'APPLICATION_TYPE','SUPPORT_YEAR', 'FUNDING_MECHANISM', 'TOTAL_COST', 'TOTAL_COST_SUB_PROJECT',
               'STUDY_SECTION', 'ORG_NAME', 'PROJECT_START', 'PROJECT_END')

time_series <- start:end


############################################
# FYs of data 2012-2016
############################################

var_names_list = list(var_names, time_series)


n1 <- length(var_names_list[[1]])
n2 <- length(var_names_list[[2]])

for(j in 1:n2)
{    
   for(k in 1:n1)
   {
      var_by_FY[k,j]<- paste0(var_names_list[[1]][k],var_names_list[[2]][j])

   }
}

CORE_PROJECT_NUM <- rep('CORE_PROJECT_NUM',dim(var_by_FY)[1])
APPLICATION_ID   <- rep('APPLICATION_ID',dim(var_by_FY)[1])
SUBPROJECT_ID    <- rep('SUBPROJECT_ID',dim(var_by_FY)[1])

var_names2 <- rbind(APPLICATION_ID,CORE_PROJECT_NUM,SUBPROJECT_ID, var_by_FY)

n1 <- dim(var_names2)[1]
n2 <- dim(var_names2)[2]

index <- start-1

for(i in start:end)
{ 

   nih_fund_time_series[[i]] <- nih[[i]][,c('APPLICATION_ID','CORE_PROJECT_NUM','SUBPROJECT_ID',var_names)]
         
   # replace NA in cost columns with 0

   nih_fund_time_series[[i]]$TOTAL_COST[is.na(nih_fund_time_series[[i]]$TOTAL_COST)]<-0
   nih_fund_time_series[[i]]$TOTAL_COST_SUB_PROJECT[is.na(nih_fund_time_series[[i]]$TOTAL_COST_SUB_PROJECT )]<-0

   # combine the total cost for each project

   nih_fund_time_series[[i]]$cost<-nih_fund_time_series[[i]]$TOTAL_COST + nih_fund_time_series[[i]]$TOTAL_COST_SUB_PROJECT

   names(nih_fund_time_series[[i]]) <- c(var_names2[,(i-index)], paste0('cost',i)) 
    
}



################################################################
# 
#  Remove records with missing Core project numbers
#
################################################################

nih12 <- nih_fund_time_series[[12]][ nchar(nih_fund_time_series[[12]]$CORE_PROJECT_NUM) >= 11 , ]
nih13 <- nih_fund_time_series[[13]][ nchar(nih_fund_time_series[[13]]$CORE_PROJECT_NUM) >= 11 , ]
nih14 <- nih_fund_time_series[[14]][ nchar(nih_fund_time_series[[14]]$CORE_PROJECT_NUM) >= 11 , ]
nih15 <- nih_fund_time_series[[15]][ nchar(nih_fund_time_series[[15]]$CORE_PROJECT_NUM) >= 11 , ]
nih16 <- nih_fund_time_series[[16]][ nchar(nih_fund_time_series[[16]]$CORE_PROJECT_NUM) >= 11 , ]
nih17 <- nih_fund_time_series[[17]][ nchar(nih_fund_time_series[[17]]$CORE_PROJECT_NUM) >= 11 , ]


subset_df <- function(df, var, levels)
{

  y <- grep(var, pattern=levels)
  x <- df[y,]
  return(x)

}


pattern <- "Non-SBIR/STTR RPGs|OTHER RESEARCH-RELATED|RESEARCH CENTERS"

nih12_ext <-subset_df(df=nih12, var=nih12$FUNDING_MECHANISM12, levels=pattern) 
nih13_ext <-subset_df(df=nih13, var=nih13$FUNDING_MECHANISM13, levels=pattern) 
nih14_ext <-subset_df(df=nih14, var=nih14$FUNDING_MECHANISM14, levels=pattern) 
nih15_ext <-subset_df(df=nih15, var=nih15$FUNDING_MECHANISM15, levels=pattern) 
nih16_ext <-subset_df(df=nih16, var=nih16$FUNDING_MECHANISM16, levels=pattern) 
nih17_ext <-subset_df(df=nih17, var=nih17$FUNDING_MECHANISM17, levels=pattern) 

nih_ext <- list(nih12_ext, nih13_ext, nih14_ext, nih15_ext,nih16_ext,nih17_ext)

#1 = New application
#2 = Competing continuation (also, competing renewal)
#3 = Application for additional (supplemental) support.  There are two kinds of type
#    3 competing revisions (which are peer-reviewed and administrative supplements)
#4 = Competing extension for an R37 award or first non-competing year of a Fast Track SBIR/STTR award
#5 = Non-competing continuation
#7 = Change of grantee institution
#9 = Change of NIH awarding Institute or Division (on a competing continuation)

app_type_names <- c('New','Competing renewal','Supplemental','Competing renewal (SBIR)',
                    'Non-competing renewal',  'Unknown','Change in grantee inst.','Other','Change of NIH awarding instutute')


plot_app_type <- function(FY)
{
   
   app_var <- paste0('APPLICATION_TYPE',FY)

   app_type <- table(nih_ext[[FY-index]][app_var])

   barplot(app_type, names = app_type_names, xlab = "Application Type", ylab = "Number of Grants",  
           main = paste0('FY', ' 20', FY, ' Number of Extramural Grants by Application Type'))

   return(app_type)

}


summary(nih12_ext[nih12_ext$TOTAL_COST12 >0 ,]$TOTAL_COST12)
summary(nih13_ext[nih13_ext$TOTAL_COST13 >0 ,]$TOTAL_COST13)
summary(nih14_ext[nih14_ext$TOTAL_COST14 >0 ,]$TOTAL_COST14)
summary(nih15_ext[nih15_ext$TOTAL_COST15 >0 ,]$TOTAL_COST15)
summary(nih16_ext[nih16_ext$TOTAL_COST16 >0 ,]$TOTAL_COST16)
summary(nih17_ext[nih17_ext$TOTAL_COST17 >0 ,]$TOTAL_COST17)

cat<- cut(nih12_ext$TOTAL_COST12, c(1,5000, 25000, 100000, 200000, 300000, 400000, 500000, 750000, Inf)) 
names_cat <- c('under 5K', '5K-25K','25K-100K', '100K-200K', '200K-300K', '400K-500K', '5005K-750K', '>750K')
names(cat) <- names_cat
plot(cat, main="Number of Grants by Award Amount"))

